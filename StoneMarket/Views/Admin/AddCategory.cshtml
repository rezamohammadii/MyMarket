@model StoneMarket.Core.ViewModels.CategoryViewModel
@using StoneMarket.Core.Classes
@inject PanelLayoutScope scope
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = null;
    var data = scope.Categories();
}

<h4 class="text-center">ثبت سردسته جدید</h4>
<hr />
<div class="row">
    <div class="col-lg-12 col-lg-offset-2 col-md-8 col-md-offset-2 col-sm-offset-10 col-sm-offset-1 col-xs-10 col-xs-offset-1">
        <form asp-action="AddCategory">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <input asp-for="Name" class="form-control" placeholder="نام دسته" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                 <label class="mb-10" for="ParentCategory">انتخاب سر دسته </label>

                <select asp-for="ParentCategory" class="fancyselect sm-mb-20 mr-20" style="width:100%">
                        <option value="none">سر دسته ندارد</option>
                    @foreach (var item in data)
                    {
                        <option value="@item.Name">@item.Name</option>

                    }

                </select>
            </div>

            <div class="form-group">
                <input type="submit" value="ثبت شود" class="btn btn-success btn-block" />
            </div>
        </form>
    </div>
</div>

@section Scripts {

<script>
     var list = [];
    $.ajax({
             url: "/Admin/Category",
             type: "GET",
             data:{}
         }).done(function(res){
             list.push(res)
             console.log(list)
             list.forEach(function(item){
                 alert(item.name)
             })
             //$('#mySelect').append($('<option>', {
             //    value: "none",
             //    text: 'My option'
             //}));
         })
</script>
}